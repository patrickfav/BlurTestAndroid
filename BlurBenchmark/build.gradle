def Properties localProps = getSigningProperties()


apply plugin: 'android'

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    signingConfigs {
        release {
            storeFile file(localProps.getProperty('RELEASE_KEYSTORE_PATH','fillhere'))
            storePassword localProps.getProperty('RELEASE_KEYSTORE_PW','')
            keyAlias localProps.getProperty('RELEASE_KEY_ALIAS','')
            keyPassword localProps.getProperty('RELEASE_KEY_PW','')
        }
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 11
        versionName "1.04b"
        renderscriptTargetApi 19
        renderscriptSupportMode true

        ndk {
            moduleName "libblur"
            cFlags "-fvisibility=hidden -W -Wall -ffast-math -O3 -funroll-loops"
            ldLibs "log", "jnigraphics"
        }
    }

    buildTypes {
        debug {
            packageNameSuffix '.debug'
            runProguard false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt");
            proguardFiles 'proguard-rules.txt'
            jniDebugBuild true
        }
        release {
            runProguard true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt");
            proguardFiles 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }
    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
}
dependencies {
    compile 'com.android.support:support-v4:19.1.0'
    compile 'com.android.support:appcompat-v7:19.1.0'
    compile 'com.squareup.picasso:picasso:2.2.+'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.+'
    compile 'com.fasterxml.jackson.core:jackson-core:2.3.+'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.3.+'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    compile project(':tablefixedheader')
    compile project(':ne10blur')
    compile fileTree(dir: 'libs', include: ['*.jar'])
}


def getSigningProperties() {
    def Properties props = new Properties()
    try {
        props.load(new FileInputStream(file('../signing.properties')))
    }catch (Exception e) {//just load any file to not get error
        props.load(new FileInputStream(file('../local.properties')))
    }
    return props
}

